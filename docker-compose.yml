version: "3.7"

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.enable-lifecycle"

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning

    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}

  # extract-data:
  #   build:
  #     context: ./extract
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./extract:/app
  #   networks:
  #     - data_network
  #   environment:
  #     - INFLUXDB_DB=db0
  #     - INFLUXDB_ADMIN_USER=admin
  #     - INFLUXDB_ADMIN_PASSWORD=cygxe6-Myhmub-godjub
  #     - INFLUXDB_URL=http://localhost:8086
  #     - INFLUXDB_TOKEN=C1szqH2SzsFz0gkev0wdU0vBaWCZoYxeA_AWkFPSMRrAoLITtiQOY_Cv95KDcFLwa7Uvv-83DehV2s6TjhRFjQ==
  #   depends_on:
  #     - grafana

  zookeeper:
    image: "bitnami/zookeeper:latest"
    container_name: zookeeper
    networks:
      - data_network
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    networks:
      - data_network
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - "KAFKA_LISTENERS=PLAINTEXT://:9092"
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS="kafka-nifi-src:1:1,kafka-nifi-dst:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  
    depends_on:
      - zookeeper

  nifi:
    image: apache/nifi:latest
    container_name: nifi
    networks:
      - data_network
    ports:
      - "8443:8443"
      - "6993:6993"
    volumes:
      - ./nifi/templates:/opt/nifi/nifi-current/conf/templates
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=ctsBtRBKHRAx69EqUghvvgEvjnaLjFEB
      - NIFI_ZK_CONNECT_STRING="zookeeper:2181"

  producer:
    build:
      context: ./kafka/producer
      dockerfile: Dockerfile
    container_name: kafka-producer
    environment:
      BINANCE_WEBSOCKETS: 'wss://stream.binance.com:9443/ws/btcusdt@kline_1m'
      TOPIC: kafka-nifi-src
      BOOTSTRAP_SERVER: "kafka:9092"
    networks:
      - data_network
    depends_on:
      - kafka

  consumer:
    build:
      context: ./kafka/consumer
      dockerfile: Dockerfile
    container_name: kafka-consumer
    environment:
      TOPIC: kafka-nifi-dst
      BOOTSTRAP_SERVER: "kafka:9092"
    networks:
      - data_network
    depends_on:
      - kafka

networks:
  data_network:

volumes:
  prometheus_data:
    name: prometheus_data
  grafana-storage:
